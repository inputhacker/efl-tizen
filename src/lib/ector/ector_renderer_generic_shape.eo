mixin Ector.Renderer.Generic.Shape (Efl.Gfx.Shape)
{
   eo_prefix: ector_renderer_shape;
   legacy_prefix: null;
<<<<<<< HEAD
   properties {
      fill {
=======
   methods {
      @property fill {
>>>>>>> opensource/master
         set {
	 }
	 get {
	 }
	 values {
<<<<<<< HEAD
	    const(Ector_Renderer) *r;
	 }
      }
      stroke_fill {
=======
	    r: const(Ector_Renderer) *;
	 }
      }
      @property stroke_fill {
>>>>>>> opensource/master
         set {
	 }
	 get {
	 }
	 values {
<<<<<<< HEAD
	    const(Ector_Renderer) *r;
	 }
      }
      stroke_marker {
=======
	    r: const(Ector_Renderer) *;
	 }
      }
      @property stroke_marker {
>>>>>>> opensource/master
         set {
	 }
	 get {
	 }
	 values {
<<<<<<< HEAD
	    const(Ector_Renderer) *r;
=======
	    r: const(Ector_Renderer) *;
>>>>>>> opensource/master
	 }
      }
   }
   implements {
      Efl.Gfx.Shape.stroke_scale;
      Efl.Gfx.Shape.stroke_color;
      Efl.Gfx.Shape.stroke_width;
      Efl.Gfx.Shape.stroke_location;
      Efl.Gfx.Shape.stroke_dash;
      Efl.Gfx.Shape.stroke_cap;
      Efl.Gfx.Shape.stroke_join;
   }
<<<<<<< HEAD
}
=======
}
>>>>>>> opensource/master
