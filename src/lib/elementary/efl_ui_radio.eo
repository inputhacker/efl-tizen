class @beta Efl.Ui.Radio extends Efl.Ui.Check implements Efl.Access.Widget.Action, Efl.Content
{
   [[Elementary radio class]]
   methods {
      @property state_value {
         set {
            [[Set the integer value that this radio object represents.

              This sets the value of the radio.
            ]]
         }
         get {
            [[Get the integer value that this radio object represents.

              This gets the value of the radio.
            ]]
         }
         values {
            value: int; [[The value to use if this radio object is selected.]]
         }
      }
      @property value_pointer {
         set {
            [[Set a convenience pointer to an integer, which changes when radio group
              value changes.

              This sets a pointer to an integer that in addition to the radio
              object state will also be modified directly. To stop setting the
              object pointed to, simply use NULL as the valuep argument. If
              valuep is not NULL then when called, the radio object
              state will also be modified to reflect the value of the integer
              valuep points to, just like calling elm_radio_value_set().
            ]]
         }
         values {
            valuep: ptr(int) @nullable; [[Pointer to the integer to modify]]
         }
      }
      @property selected_object {
         get {
            [[Get the selected radio object.]]
            return: Efl.Canvas.Object; [[The selected radio object]]
         }
      }
      group_add {
         [[Add this radio to a group of other radio objects

           Radio objects work in groups. Each member should have a different
           integer value assigned. In order to have them work as a group, they
           need to know about each other. This adds the given radio object to
           the group of which the group object indicated is a member.
         ]]

         params {
            @in group: Efl.Ui.Radio; [[Any radio object whose group the obj is
                                    to join.]]
         }
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
      Efl.Ui.Widget.theme_apply;
      Efl.Ui.Widget.on_access_activate;
      Efl.Ui.Widget.widget_input_event_handler;
      Efl.Access.Object.state_set { get; }
      Efl.Access.Widget.Action.elm_actions { get; }
      Efl.Ui.Nstate.value { set; get; }
   }
}
