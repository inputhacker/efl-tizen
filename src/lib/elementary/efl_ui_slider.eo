class Efl.Ui.Slider (Efl.Ui.Layout, Efl.Ui.Range, Efl.Ui.Direction,
                     Efl.Access.Value, Efl.Text, Efl.Text.Markup, Efl.Ui.Format,
                     Efl.Ui.Translatable, Efl.Access.Widget.Action,
                     Efl.Content)
{
   [[Elementary slider class]]
   legacy_prefix: elm_slider;
   methods {
      @property step {
         set {
            [[Set the step by which slider indicator will move.

              This value is used when a draggable object is moved automatically
              such as when key events like the up/down/left/right key are pressed
              or in case accessibility is set and flick event is used to
              inc/dec slider values. By default step value is 0.05.

              @since 1.8
            ]]
         }
         get {
            [[Get the step by which slider indicator moves.

              @since 1.8
            ]]
         }
         values {
            step: double; [[The step value.]]
         }
      }
   }
   parts {
      indicator: Efl.Ui.Slider.Part_Indicator;
          [[A floating indicator above the slider.]]
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Canvas.Group.group_calculate;
      Efl.Ui.Widget.theme_apply;
      Efl.Ui.Widget.on_access_activate;
      Efl.Ui.Focus.Object.on_focus_update;
      Efl.Ui.Widget.widget_event;
      //TIZEN_ONLY(20170419): fix slider indicator behavior
      Efl.Ui.Widget.on_disabled_update;
      //
      //TIZEN_ONLY(20161115): apply UI Mirroring for Tizen 3.0 UX
      Efl.Ui.Base.mirrored { get; set; }
      //
      Efl.Ui.Range.range_value { get; set; }
      Efl.Ui.Range.range_min_max {get; set; }
      Efl.Ui.Direction.direction { get; set; }
      Efl.Access.Value.value_and_text { get; set; }
      Efl.Access.Value.range { get; }
      Efl.Access.Value.increment { get; }
      Efl.Access.Widget.Action.elm_actions { get; }
      Efl.Text.text { get; set; }
      Efl.Text.Markup.markup { get; set; }
      Efl.Ui.Format.format_cb { set; }
      Efl.Ui.Translatable.translatable_text { get; set; }
      Efl.Content.content { get; set; }
      Efl.Content.content_unset;
      Efl.Part.part;
   }
   events {
      changed; [[Called when slider changed]]
      delay,changed; [[Called when delay changed]]
      slider,drag,start; [[Called when slider drag started]]
      slider,drag,stop; [[Called when slider drag stopped]]
   }
}
