class Elm.Plug (Efl.Ui.Widget, Efl.Ui.Clickable, Efl.Ui.Legacy)
{
   [[Elementary plug class]]
   legacy_prefix: elm_plug;
   eo_prefix: elm_obj_plug;
   event_prefix: elm_plug;
   data: null;
   methods {
      @property image_object {
         get {
            [[Get the basic Evas_Image object from this object (widget).

              This function allows one to get the underlying Evas object of type
              Image from this elementary widget. It can be useful to do things
              like get the pixel data, save the image to a file, etc.

              Note: Be careful to not manipulate it, as it is under control of
              elementary.
            ]]
            return: Efl.Canvas.Object; [[The inlined image object or $null.]]
         }
      }
      connect {
         [[Connect a plug widget to service provided by socket image.]]
         return: bool; [[$true on success, $false on error.]]
         params {
            @in svcname: string; [[The service name to connect to set up by the socket.]]
            @in svcnum: int; [[The service number to connect to (set up by socket).]]
            @in svcsys: bool; [[Boolean to set if the service is a system one or not (set up by socket).]]
         }
      }
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Ui.Widget.theme_apply;
      Efl.Ui.Focus.Object.on_focus_update;
      //Efl.Ui.Widget.on_focus_update;
      //TIZEN_ONLY(20171108): make atspi_proxy work
      Efl.Access.Object.access_children { get; }
      //
   }
   events {
      image,deleted: void; [[Called when image was deleted]]
      image,resized: Eina.Position2D; [[Called when image was resized]]
      message,received: void;
   }
}
