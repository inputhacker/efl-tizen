class Efl.Ui.Progressbar (Efl.Ui.Layout, Efl.Ui.Range, Efl.Ui.Format,
                          Efl.Ui.Direction, Efl.Access.Value)
{
   [[Elementary progressbar class]]
   methods {
      @property pulse_mode {
         [[Control whether a given progress bar widget is at "pulsing mode" or not.

           By default progress bars display values from low to
           high boundaries. There are situations however in which the
           progress of a given task is unknown. In these cases,
           you can set a progress bar widget to a "pulsing state" to give
           the user an idea that some computation is being done
           without showing the precise progress rate. In the default theme, it will
           animate the bar with content, switching constantly between filling it and back
           to non-filled in a loop. To start and stop this pulsing
           animation you need to explicitly call elm_progressbar_pulse().

           @since 1.20
         ]]

         set {
         }
         get {
         }
         values {
            pulse: bool; [[$true to put $obj in pulsing mode, $false to put it back to its default one]]
         }
      }
      @property pulse {
         set {
           [[Start/stop a given progress bar "pulsing" animation, if its under that mode

           Note: This call won't do anything if $obj is not under "pulsing mode".

           @since 1.20
           ]]
         }
         get {
            [[ Get the pulsing state on a given progressbar widget.

            @since 1.20
            ]]
         }
         values {
           state: bool; [[$true, to start the pulsing animation, $false to stop it]]
         }
      }
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Ui.Widget.theme_apply;
      Efl.Ui.Widget.widget_sub_object_add;
      Efl.Ui.Widget.widget_sub_object_del;
      //TIZEN_ONLY(20161109): apply UI Mirroring for Tizen 3.0 UX
      Efl.Ui.Base.mirrored { get; set; }
      //
      Efl.Ui.Range.range_value { get; set; }
      Efl.Ui.Direction.direction { get; set; }
      Efl.Ui.Format.format_cb { set; }
      Efl.Part.part;
      Efl.Access.Value.value_and_text { get; }
      //TIZEN_ONLY(20160603): added description_get API
      Efl.Access.description { get; }
      //
   }
   events {
      changed; [[Called when progressbar changed]]
   }
}
