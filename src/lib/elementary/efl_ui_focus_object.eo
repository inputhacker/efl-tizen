import eina_types;

mixin Efl.Ui.Focus.Object
{
    [[Functions of focusable objects.

      @since 1.20
    ]]
    methods {
        @property focus_geometry {
            [[The geometry used to calculate relationships between other objects.]]
            get {

            }
            values {
                rect : Eina.Rect; [[The geometry to use.]]
            }
        }
        @property focus {
            [[This is called by the manager and should never be called by
              anyone else.

             It can be used by configuring a focus object to adapt to
             any changes that are required.

             The function emits the focus state events, if focus is
             different to the previous state.
            ]]
            get {

            }
            set @protected {

            }
            values {
                focus : bool; [[The state in which the object should be put]]
            }
        }
        prepare_logical {
            [[Tells the object that its children will be queried soon by the given manager.

              Deleting manager items in this call will result in undefied behaviour and may cause your system to crash.
            ]]
        }
    }
    implements {
        @empty .focus_geometry;
        @empty .prepare_logical;
    }
    events {
        focus,changed : bool; [[Emitted if the focus state has changed]]
    }
}
