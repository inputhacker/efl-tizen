enum Efl.Ui.Popup_Align {
    [[Popup alignment type]]
    none = 0, [[Popup not aligned]]
    center,   [[Popup aligned to center]]
    left,     [[Popup aligned to left]]
    right,    [[Popup aligned to right]]
    top,      [[Popup aligned to top]]
    bottom    [[Popup aligned to bottom]]
}

class Efl.Ui.Popup(Efl.Ui.Layout, Efl.Content)
{
   [[EFL UI popup class]]
   methods {
      @property align {
         set {
            [[ Set the popup alignment.]]
         }
         get {
            [[ Get the current popup alignment.]]
         }
         values {
             type: Efl.Ui.Popup_Align; [[Alignment type]]
         }
      }
      @property timeout {
         set {
            [[ Set the timeout seconds.
               After timeout seconds, popup will be deleted automatically.
            ]]
         }
         get {
            [[ Get the currently set timeout seconds.]]
         }
         values {
             time: double; [[Timeout in seconds]]
         }
      }
      @property popup_size {
         set {
            [[Set the popup size.]]
         }
         get {
            [[get the current popup size.]]
         }
         values {
            size: Eina.Size2D;
         }
      }
   }
   parts {
      backwall: Efl.Ui.Popup_Part_Backwall; [[A backwall behind the popup.]]
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
      Efl.Canvas.Group.group_calculate;
      Efl.Gfx.Entity.position { set; }
      Efl.Gfx.Entity.size { set;}
      Efl.Gfx.Entity.visible { set; }
      Efl.Ui.Widget.widget_parent { set; }
      Efl.Content.content { get; set; }
      Efl.Content.content_unset;
      Efl.Part.part_get;
   }
   events {
      backwall,clicked: void; [[This is called whenever the user clicks back wall of popup.]]
      timeout: void; [[This is called when popup times out.]]
   }
}
