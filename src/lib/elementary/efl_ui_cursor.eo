interface Efl.Ui.Cursor ()
{
   [[An interface to define mouse cursors to use when hovering
     over UI widgets.

     The Elementary cursor is an internal smart object used to customize the
     mouse cursor displayed over objects (or widgets). In the most common
     scenario, the cursor decoration comes from the graphical engine Elementary
     is running on. These engines may provide different decorations for cursors,
     and Elementary provides functions to choose them for instance
     X11 cursors.

     By default, Elementary searches cursors only from the engine. Besides
     using cursors provided by the you can also use those
     coming from Edje theme files. Both globally and per widget, Elementary
     can help you store cursors in engines
     only or in Elementary's theme file. To set cursor's hot spot two data
     items must be added to the cursor's theme: "hot_x" and "hot_y" are the
     offset from the upper-left corner of the cursor (coordinates 0,0).
   ]]
   legacy_prefix: elm_object;
   methods {
      @property cursor {
         [[The cursor to be shown when mouse is over the object

           This is the cursor that will be displayed when mouse is over the
           object. The object can have only one cursor set to it so if
           @.cursor.set is called twice for an object, the previous set
           will be unset.

           If using X cursors, a definition of all the valid cursor names
           is listed on Elementary_Cursors.h. If an invalid name is set
           the default cursor will be used.
         ]]
         set {
            [[Sets or unsets the current cursor.

              If $cursor is $null this function will reset the cursor
              to the default one.
            ]]
            return: bool; [[$true if successful.]]
         }
         get {
            [[Returns the current cursor name.]]
         }
         values {
            cursor: string @nullable; [[The cursor name, defined either
                                        by the display system or the theme.]]
         }
      }
      @property cursor_style {
         [[A different style for the cursor.

           This only makes sense if theme cursors are used.
           The cursor should be set with @.cursor.set first before
           setting its style with this property.
         ]]
         set {
            [[Sets a style for the current cursor. Call after @.cursor.set.]]
            return: bool; [[$true if successful.]]
         }
         get {
            [[Returns the current cursor style name.]]
         }
         values {
            style: string; [[A specific style to use, eg. default,
                             transparent, ....]]
         }
      }
      @property cursor_theme_search_enabled {
         [[Whether the cursor may be looked in the theme or not.

           If $false, the cursor may only come from the render engine,
           i.e. from the display manager.
         ]]
         set {
            [[Enables or disables theme cursors.]]
            return: bool; [[$true if successful.]]
         }
         get {
            [[Returns the current state of theme cursors search.]]
         }
         values {
            allow: bool(true); [[Whether to use theme cursors.]]
         }
      }
   }
}
