class Efl.Ui.Image_Zoomable (Efl.Ui.Widget, Efl.Ui.Image, Efl.Ui.Zoom,
                             Efl.Ui.Scrollable.Interactive,
                             Efl.Ui.Scrollbar)
{
   [[Elementary Image Zoomable class]]
   legacy_prefix: elm_photocam;
   methods {
      @property gesture_enabled {
         set {
            [[Set the gesture state for photocam.

              This sets the gesture state to on or off for photocam. The
              default is off. This will start multi touch zooming.
            ]]
         }
         get {
            [[Get the gesture state for photocam.

              This gets the current gesture state for the photocam object.
            ]]
         }
         values {
            gesture: bool; [[The gesture state.]]
         }
      }
      @property image_region {
         get {
            [[Get the region of the image that is currently shown

              See also @.image_region.set.
            ]]
            legacy: null;
         }
         set {
            [[Set the viewed region of the image

              This shows the region of the image without using animation.
              @since 1.20
            ]]
            legacy: null;
         }
         values {
            region: Eina.Rect; [[The region in the original image pixels.]]
         }
      }
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Gfx.position { set; }
      Efl.Gfx.size { set; }
      Efl.Gfx.View.view_size { get; }
      Efl.Image.image_size { get; }
      Efl.Ui.Image.icon { set; get; }
      Efl.Player.playable { get; }
      Efl.Player.play { get; set; }
      Efl.Ui.Zoom.zoom_animation { set; get; }
      Efl.Ui.Zoom.zoom { set; get; }
      Efl.Ui.Zoom.zoom_mode { set; get; }
      Efl.Canvas.Group.group_member_add;
      Efl.Ui.Widget.theme_apply;
      Efl.Ui.Widget.on_focus_update;
      Efl.Ui.Widget.widget_event;
      Efl.Ui.Scrollable.Interactive.scroll;
      Efl.Access.Widget.Action.elm_actions { get; }
      Efl.File.file { get; set; }
      Efl.Orientation.orientation { get; set; }
      Efl.Flipable.flip { get; set; }
      Efl.Layout.Group.group_size_min { get; }
      Efl.Layout.Group.group_size_max { get; }
	  Efl.Layout.Signal.signal_callback_add;
	  Efl.Layout.Signal.signal_callback_del;
      //Efl.Canvas.Layout_Group.group_data { get; }
   }
   events {
      press; [[Called when photocam got pressed]]
      load; [[Called when photocam loading started]]
      loaded; [[Called when photocam loading finished]]
      load,detail; [[Called when photocal detail loading started]]
      loaded,detail; [[Called when photocam detail loading finished]]
      download,start; [[Called when photocam download started]]
      download,progress; [[Called when photocam download progress updated]]
      download,done; [[Called when photocam download finished]]
      download,error; [[Called when photocam download failed]]
   }
}
