interface Efl.Ui.Range
{
   [[Efl UI progress interface]]
   methods {
      @property range_value {
         [[Control the range value (in percentage) on a given range widget

           Use this call to set range levels.

           Note: If you pass a value out of the specified interval for
           $val, it will be interpreted as the closest of the boundary
           values in the interval.]]
         set {
         }
         get {
         }
         values {
            val: double; [[The range value (must be between $0.0 and 1.0)]]
         }
      }
      @property range_min_max {
         set {
            [[Set the minimum and maximum values for given range widget.

              Define the allowed range of values to be selected by the user.

              If actual value is less than $min, it will be updated to $min.
              If it is bigger then $max, will be updated to $max. The actual value
              can be obtained with @Efl.Ui.Range.range_value.get

              The minimum and maximum values may be different for each class.

              Warning: maximum must be greater than minimum, otherwise behavior
              is undefined.
            ]]
         }
         get {
            [[Get the minimum and maximum values of the given range widget.

              Note: If only one value is needed, the other pointer can be passed
              as $null.
            ]]
         }
         values {
            min: double; [[The minimum value.]]
            max: double; [[The maximum value.]]
         }
      }
      @property range_step {
         [[Control the step used to increment or decrement values for given widget.

           This value will be incremented or decremented to the displayed value.

           By default step value is equal to 1.

           Warning: The step value should be bigger than 0.]]
         set {
         }
         get {
         }
         values {
           step: double; [[The step value.]]
         }
      }
   }
}
