enum Efl.Text_Format_Wrap {
   [[Wrap mode of the text (not in effect if not multiline)]]
   none, [[No wrapping]]
   char, [[Wrap mode character]]
   word, [[Wrap mode word]]
   mixed, [[Wrap mode mixed]]
   hyphenation [[Wrap mode hyphenation]]
}

enum Efl.Text_Format_Horizontal_Alignment_Auto_Type {
   [[Auto-horizontal alignment of the text]]
   none,   [[No auto-alignment rule]]
   normal, [[Respects LTR/RTL (bidirectional) settings]]
   locale, [[Respects locale's langauge settings]]
   end     [[Text is places at opposite side of LTR/RTL (bidirectional) settings]]
}

interface @beta Efl.Text_Format {
   [[The look and layout of the text

     The text format can affect the geometry of the text object, as well as
     how characters are presented.

     @since 1.20
   ]]
   eo_prefix: efl_text;
   methods {
      @property ellipsis {
         [[Ellipsis value (number from -1.0 to 1.0)]]
         values
         {
            value: double; [[Ellipsis value]]
         }
      }

      @property wrap {
         [[Wrap mode for use in the text]]
         values {
            wrap: Efl.Text_Format_Wrap; [[Wrap mode]]
         }
      }

      @property multiline {
         [[Multiline is enabled or not]]
         values {
            enabled: bool; [[$true if multiline is enabled, $false otherwise]]
         }
      }

      @property halign_auto_type {
         [[Horizontal alignment of text]]
         values {
            value: Efl.Text_Format_Horizontal_Alignment_Auto_Type; [[Alignment type]]
         }
      }

      @property halign {
         [[Horizontal alignment of text]]
         values {
            value: double; [[Horizontal alignment value]]
         }
      }

      @property valign {
         [[Vertical alignment of text]]
         values {
            value: double; [[Vertical alignment value]]
         }
      }

      @property linegap {
         [[Minimal line gap (top and bottom) for each line in the text

           $value is absolute size.
         ]]
         values
         {
            value: double; [[Line gap value]]
         }
      }

      @property linerelgap {
         [[Relative line gap (top and bottom) for each line in the text

           The original line gap value is multiplied by $value.
         ]]
         values
         {
            value: double; [[Relative line gap value]]
         }
      }

      @property tabstops {
         [[Tabstops value]]
         values
         {
            value: int; [[Tapstops value]]
         }
      }

      @property password {
         [[Whether text is a password]]
         values
         {
            enabled: bool; [[$true if the text is a password, $false otherwise]]
         }
      }

      @property replacement_char {
         [[The character used to replace characters that can't be displayed

           Currently only used to replace characters if @.password
           is enabled.
         ]]
         values {
            repch: string; [[Replacement character]]
         }
      }
   }
}
