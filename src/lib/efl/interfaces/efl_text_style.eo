enum Efl.Text_Style_Backing_Type
{
   [[Whether to apply backing style to the displayed text or not]]
   disabled = 0, [[Do not use backing]]
   enabled,      [[Use backing style]]
}

enum Efl.Text_Style_Strikethrough_Type
{
   [[Whether to apply strikethrough style to the displayed text or not]]
   disabled = 0, [[Do not use strikethrough]]
   enabled,      [[Use strikethrough style]]
}

enum Efl.Text_Style_Effect_Type
{
   [[Effect to apply to the displayed text]]
   none = 0, [[No effect]]

   // colored with shadow_color
   shadow, [[Shadow effect]]
   far_shadow, [[Far shadow effect]]
   soft_shadow, [[Soft shadow effect]]
   far_soft_shadow, [[Far and soft shadow effect]]
   // colored with glow_color
   glow, [[Glow effect]]
   // colored with outline_color
   outline, [[Outline effect]]
   soft_outline, [[Soft outline effect]]
   // colored with outline_color + shadow_color
   outline_shadow, [[Outline shadow effect]]
   outline_soft_shadow, [[Outline soft shadow effect]]
}

enum Efl.Text_Style_Shadow_Direction
{
   [[Direction of the shadow style, if used]]
   bottom_right = 0, [[Shadow towards bottom right]]
   bottom, [[Shadow towards botom]]
   bottom_left, [[Shadow towards bottom left]]
   left, [[Shadow towards left]]
   top_left, [[Shadow towards top left]]
   top, [[Shadow towards top]]
   top_right, [[Shadow towards top right]]
   right, [[Shadow towards right]]
}

enum Efl.Text_Style_Underline_Type
{
   [[Underline type of the displayed text]]
   off = 0, [[Text without underline]]
   on, [[Underline enabled]]
   single, [[Underlined with a signle line]]
   double, [[Underlined with a double line]]
   dashed, [[Underlined with a dashed line]]
}

interface @beta Efl.Text_Style {
   [[Style to apply to the text

     A style can be coloring, effects, underline, strikethrough etc.

     @since 1.20
   ]]
   eo_prefix: efl_text;
   methods {
      @property normal_color {
         [[Color of text, excluding style]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property backing_type {
          [[Enable or disable backing type]]
         values
         {
            type: Efl.Text_Style_Backing_Type; [[Backing type]]
         }
      }

      @property backing_color {
          [[Backing color]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property underline_type {
         [[Sets an underline style on the text]]
         values
         {
            type: Efl.Text_Style_Underline_Type; [[Underline type]]
         }
      }

      @property underline_color
      {
         [[Color of normal underline style]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property underline_height
      {
         [[Height of underline style]]
         values
         {
            height: double; [[Height]]
         }
      }

      @property underline_dashed_color
      {
         [[Color of dashed underline style]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property underline_dashed_width
      {
         [[Width of dashed underline style]]
         values
         {
            width: int; [[Width]]
         }
      }

      @property underline_dashed_gap
      {
         [[Gap of dashed underline style]]
         values
         {
            gap: int; [[Gap]]
         }
      }

      @property underline2_color
      {
         [[Color of underline2 style]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property strikethrough_type {
         [[Type of strikethrough style]]
         values
         {
            type: Efl.Text_Style_Strikethrough_Type; [[Strikethrough type]]
         }
      }

      @property strikethrough_color
      {
         [[Color of strikethrough_style]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property effect_type {
         [[Type of effect used for the displayed text]]
         values {
            type: Efl.Text_Style_Effect_Type; [[Effect type]]
         }
      }
      @property outline_color
      {
         [[Color of outline effect]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property shadow_direction
      {
         [[Direction of shadow effect]]
         values
         {
            type: Efl.Text_Style_Shadow_Direction; [[Shadow direction]]
         }
      }

      @property shadow_color
      {
         [[Color of shadow effect]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property glow_color
      {
         [[Color of glow effect]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property glow2_color
      {
         [[Second color of the glow effect]]
         values
         {
            r: ubyte; [[Red component]]
            g: ubyte; [[Green component]]
            b: ubyte; [[Blue component]]
            a: ubyte; [[Alpha component]]
         }
      }

      @property gfx_filter
      {
         [[Program that applies a special filter

           See @Efl.Gfx.Filter.
         ]]
         values
         {
            code: string; [[Filter code]]
         }
      }
   }
}
