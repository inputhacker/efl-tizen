// FIXME: Documentation lacks proper references due to cyclic imports.
// FIXME: What about AnyRTL? And other strange directions?

parse efl_orientation;

enum @beta Efl.Ui.Dir
{
   [[Direction for UI objects and layouts.

     Not to be confused with @Efl.Orient which is for images and canvases. This
     enum is used to define how widgets should expand and orient themselves,
     not to rotate images.

     See also @Efl.Ui.Direction.
   ]]
   default = 0,[[Default direction. Each widget may have a different default.]]
   horizontal, [[Horizontal direction, along the X axis. Usually left-to-right,
                 but may be inverted to right-to-left if mirroring is on.]]
   vertical,   [[Vertical direction, along the Y axis. Usually downwards.]]
   ltr,        [[Horizontal, left-to-right direction.]]
   rtl,        [[Horizontal, right-to-left direction.]]
   down,       [[Vertical, top-to-bottom direction.]]
   up,         [[Vertical, bottom-to-top direction.]]
   right = Efl.Ui.Dir.ltr, [[Right is an alias for LTR.]]
   left = Efl.Ui.Dir.rtl, [[Left is an alias for RTL.]]
}

interface @beta Efl.Ui.Direction
{
   [[EFL UI object direction interface]]
   methods {
       @property direction {
         [[Control the direction of a given widget.

           Use this function to change how your widget is to be disposed:
           vertically or horizontally or inverted vertically or inverted
           horizontally.

           Mirroring as defined in @Efl.Ui.I18n can invert the $horizontal
           direction: it is $ltr by default, but becomes $rtl if the object
           is mirrored.
         ]]
         values {
            dir: Efl.Ui.Dir; [[Direction of the widget.]]
         }
      }
   }
}
