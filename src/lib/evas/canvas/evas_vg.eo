class Evas.VG (Evas.Object, Efl.File)
{
   legacy_prefix: evas_object_vg;
   eo_prefix: evas_obj_vg;
   properties {
      root_node {
	 get {
	 }
	 values {
	    Evas_VG_Node *container;
	 }
      }
      size {
         get {
	    /*@
	      Get the size as defined in the original data
	      before any scaling (as in the file or when the
	      object were added).
	    */
	 }
	 values {
	    uint w;
	    uint h;
	 }
      }
      mmap {
         set {
            /*@
            Set the source mmaped file from where an image object must fetch the real
            image data (it must be an Eina_File).

            If the file supports multiple data stored in it (as Eet files do),
            you can specify the key to be used as the index of the image in
            this file.

            @since 1.14 */
	    return: bool;
         }
         get {
            /*@
            Get the source mmaped file from where an image object must fetch the real
            image data (it must be an Eina_File).

            If the file supports multiple data stored in it (as Eet files do),
            you can get the key to be used as the index of the image in
            this file.

            @since 1.14 */
         }
         values {
            const(Eina.File)* f; /*@ The mmaped file */
            const(char)* key; /*@ The image key in @p file (if its an Eet one), or @c
            NULL, otherwise. */
         }
      }
   }
   implements {
      Eo.Base.constructor;
      Efl.File.file.set;
      Efl.File.file.get;
   }
}