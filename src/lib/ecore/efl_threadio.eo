import efl_types;
import eina_types;

function EFlThreadIOCall {
   [[ A Function to call on the "other end" of a thread obvject ]]
   params {
      obj: Efl.Object; [[ ]]
   }
};

function EFlThreadIOCallSync {
   [[ A Function to call on the "other end" of a thread obvject ]]
   params {
      obj: Efl.Object; [[ ]]
   }
   return: void_ptr; [[ ]]
};

mixin Efl.ThreadIO
{
   [[ ]]
   methods {
      @property indata {
         set { }
         get { }
         values {
            data: void_ptr; [[ ]]
         }
      }
      @property outdata {
         set { }
         get { }
         values {
            data: void_ptr; [[ ]]
         }
      }
      call {
         params {
            func: EFlThreadIOCall; [[ ]]
         }
      }
      call_sync {
         params {
            func: EFlThreadIOCallSync; [[ ]]
         }
         return: void_ptr; [[ ]]
      }
   }
   events {
   }
   implements {
   }
}
